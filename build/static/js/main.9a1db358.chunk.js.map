{"version":3,"sources":["components/LIne.js","components/Upload.js","components/ButtonType/ButtonType.js","App.js","reportWebVitals.js","index.js"],"names":["LIne","changeBackgroundColor","className","Upload","React","useState","images","setImages","settings","dot","infinite","speed","slidesToShow","slidesToScroll","multiple","value","onChange","imageList","addUpdateIndex","console","log","maxNumber","dataURLKey","onImageUpload","onImageRemoveAll","isDragging","dragProps","style","color","undefined","onClick","map","image","index","src","alt","width","height","a11yProps","id","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","position","fab","bottom","spacing","right","fabGreen","common","white","green","ButtonType","props","data","setData","category","setCategory","useEffect","a","axios","result","axiosData","classes","useTheme","setValue","AppBar","Tabs","event","newValue","indicatorColor","textColor","variant","Tab","label","item","App","setBackgroundColor","getRandomColor","Math","random","toString","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a1db358.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './Line.css'\r\n\r\nfunction LIne(changeBackgroundColor) {\r\n\r\n\r\n    return (\r\n        <div className=\"changeBackgroundColor\">\r\n            <h3>Change Backgroung color</h3>\r\n            <div className=\"changeColor\">\r\n                <span  className=\"colorOrange\"></span>\r\n                <span  className=\"colorRed\"></span>\r\n                <span  className=\"colorBlue\"></span>\r\n                <span  className=\"colorGreen\"></span>\r\n                <span  className=\"colorYello\"></span>\r\n                <span  className=\"colorViolet\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LIne\r\n","import React from 'react';\r\nimport ImageUploading from 'react-images-uploading';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nexport function Upload() {\r\n  const [images, setImages] = React.useState([]);\r\n  const maxNumber = 69;\r\n\r\n  const onChange = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    setImages(imageList);\r\n  };\r\n\r\n  const settings = {\r\n    dot: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n};\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ImageUploading\r\n        multiple\r\n        value={images}\r\n        onChange={onChange}\r\n        maxNumber={maxNumber}\r\n        dataURLKey=\"data_url\"\r\n      >\r\n        {({\r\n          imageList,\r\n          onImageUpload,\r\n          onImageRemoveAll,\r\n          isDragging,\r\n          dragProps,\r\n        }) => (\r\n          // write your building UI\r\n          <div className=\"upload__image-wrapper\">\r\n            <button\r\n              style={isDragging ? { color: 'red' } : undefined}\r\n              onClick={onImageUpload}\r\n              {...dragProps}\r\n            >\r\n              Add image\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={onImageRemoveAll}>Remove all images</button>\r\n            <Slider {...settings}>\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image['data_url']} alt=\"\" width=\"250px\" height=\"250px\" />\r\n              </div>\r\n            ))}\r\n            </Slider>\r\n          </div>\r\n        )}\r\n      </ImageUploading>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\nimport \"./ButtonType.css\";\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Upload } from '../Upload';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`action-tabpanel-${index}`}\r\n            aria-labelledby={`action-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `action-tab-${index}`,\r\n        'aria-controls': `action-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 700,\r\n        position: 'relative',\r\n        height: 51,\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    fabGreen: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[600],\r\n        },\r\n    },\r\n}));\r\n\r\nconst settings = {\r\n    dot: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n};\r\n\r\nexport default function ButtonType(props) {\r\n\r\n    const [title, setTitle] = useState(\"React App\")\r\n    const [data, setData] = useState([])\r\n    const [category, setCategory] = useState(\"jewelery\")\r\n\r\n    useEffect(() => {\r\n        const axiosData = async () => {\r\n            const result = await axios(\r\n                `https://fakestoreapi.com/products/category/${category}`\r\n            );\r\n\r\n            setData(result.data)\r\n        }\r\n        axiosData();\r\n    }, [category])\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"action tabs example\"\r\n                >\r\n                    <Tab  onClick={() => setCategory(\"jewelery\")} label=\"jewelery\" {...a11yProps(0)} />\r\n                    <Tab  onClick={() => setCategory(\"electronics\")} label=\"Electronics\" {...a11yProps(1)} />\r\n                    <Tab  onClick={() => setCategory(\"women's clothing\")} label=\"women's clothing\" {...a11yProps(2)} />\r\n                    <Tab  onClick={() => setCategory(\"men's clothing\")} label=\"men's clothing\" {...a11yProps(3)} />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n           \r\n            \r\n            <div>\r\n            <Slider {...settings}>\r\n                {data.map((item) => {\r\n                    return  <img src={item.image} className=\"categoryImage\"  />\r\n                }\r\n               )}\r\n               </Slider>\r\n            </div>\r\n            <Upload />\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport React, {useState,useEffect} from 'react';\nimport LIne from './components/LIne';\nimport ButtonType from './components/ButtonType/ButtonType';\n\n\nfunction App() {\n\n\n  const [backgroundColor, setBackgroundColor] = useState(\"#383A45\")\n  \n  const getRandomColor = ()=>{\n    return \"#\" + Math.random().toString(16).slice(2,8);\n }\n  const changeBackgroundColor = ()=>{\n    setBackgroundColor(getRandomColor())\n  }\n  return (\n    <div className=\"App\" onClick={changeBackgroundColor}\n    style={{backgroundColor:backgroundColor}} >\n      <LIne changeBackgroundColor={changeBackgroundColor} getRandomColor={getRandomColor} />\n      <ButtonType />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}